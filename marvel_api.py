# -*- coding: utf-8 -*-
"""Marvel API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13PPKxgTv9TKol2E42YxXBmyvp-8qvQ-R

## Activity 2
"""

import requests
import pandas as pd
import hashlib
import string

url= "http://gateway.marvel.com/v1/public/characters"
pub_key = "3ebe772bd7520157eac2193a02a2c3a0"
prv_key = "5f34e4f4b940669decb843ddf3aab0ebe8c7513d"
ts = '2'
total = ts + prv_key + pub_key
hash = hashlib.md5(total.encode("utf-8")).hexdigest()

char = list(string.ascii_uppercase)
print(char)

marvel_data = {'id':[], "name":[],'comics.available':[], 'series.available':[], 'stories.available':[], 'events.available':[]}
marvel_df = pd.DataFrame(marvel_data)

for i,c in enumerate(char):
  nameStartsWith = c
  limit = 100
  para = {"nameStartsWith": nameStartsWith, "apikey": pub_key, "hash": hash, "ts": ts, "limit": limit}
  r = requests.get(url = url, params = para)
  data = r.json()
  #print(data)
  df2 = pd.json_normalize(data['data']['results'])
  #print(df2.head())
  df = df2.loc[:,['id', 'name', 'comics.available', 'series.available', 'stories.available', 'events.available']]
  marvel_df = marvel_df.append(df, ignore_index = True)

print(marvel_df)

"""## Activity 3"""

def marvel (api, hash, name):

  if api is None:
    raise Exception("api key not specified")
  if hash is None:
    raise Exception("hash not specified")
  else:
    prv_key = "5f34e4f4b940669decb843ddf3aab0ebe8c7513d"
    ts = '2'
    para = {"nameStartsWith": name, "apikey": api, "hash": hash, "ts": ts, "limit": 100}
    r = requests.get(url = url, params = para)
    data = r.json()
    df2 = pd.json_normalize(data['data']['results'])
    df = df2.loc[:,['id', 'name', 'comics.available', 'series.available', 'stories.available', 'events.available']]
    print(df)

marvel("3ebe772bd7520157eac2193a02a2c3a0", "09af4c010b55a575a7f25dc5417cf215", "P")

"""## Activity 4"""

def col_filter(df, col, operator, value):
    if operator == '=':
       df2 = df[df[col] == int(value)]
    elif operator == '>':
        df2 = df[df[col] > int(value)]
    else:
        df2 = df[df[col] > int(value)]
    return df2

col = input('input col: ')
operator = input('operator: ')
value = input('value: ')

marvel_filter = col_filter(marvel_df,col,operator,value)
print(marvel_filter)

"""## Activity 5"""

